class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
        // make list of next Great values and create map of num to index
        int[] nextGreat = new int[n2];
        Stack<Integer> stack = new Stack();
        Map<Integer,Integer> map = new HashMap<>();
        for(int i=n2-1;i>=0;i--){
            map.put(nums2[i],i);
            int currNum = nums2[i];
            
            while(!stack.isEmpty() && stack.peek() < currNum){ 
                stack.pop();
            }
            if(stack.isEmpty()){ // Didn't find a next greater value
                nextGreat[i] = -1;
                stack.push(currNum);
            }else if(currNum<stack.peek()){ // found next greater value
                nextGreat[i]=stack.peek();
                stack.push(currNum);
            }
        }
        int[] out = new int[n1];
        for(int i=0;i<n1;i++){
            out[i]=nextGreat[map.get(nums1[i])];
        }
        return out;
    }
}
